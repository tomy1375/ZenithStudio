---
import MapPin from '../components/icons/MapPin.astro';
import Mail from '../components/icons/Mail.astro';
import Phone from '../components/icons/Phone.astro';
import Instagram from '../components/icons/Instagram.astro';
import Twitter from '../components/icons/Twitter.astro';
import Linkedin from '../components/icons/Linkedin.astro';
import Github from '../components/icons/Github.astro';

// Aquí deberás colocar tu clave de Web3Forms
const WEB3FORMS_ACCESS_KEY = "56a77bea-6ef6-4788-b4d4-58ed2353ee43";
---

<section id="contacto" class="section-padding bg-zinc-900">
  <div class="container">
    <h2 class="section-title">Contacto</h2>
    <p class="text-center text-gray-400 max-w-2xl mx-auto mb-12">
      ¿Tenés un proyecto en mente? Contactanos para convertir tus ideas en realidad.
    </p>

    <div class="grid md:grid-cols-2 gap-12 max-w-4xl mx-auto">
      <div class="bg-zinc-800/50 p-8 rounded-2xl backdrop-blur-sm border border-zinc-700/30">
        <h3 class="text-2xl font-semibold mb-6">Envianos un mensaje</h3>
        <form action="https://api.web3forms.com/submit" method="POST" class="space-y-5" id="contact-form">
          <!-- Web3Forms Access Key (requerido) -->
          <input type="hidden" name="access_key" value={WEB3FORMS_ACCESS_KEY} />
          
          <!-- Campo oculto para capturar bots -->
          <input type="checkbox" name="botcheck" class="hidden" style="display: none;" />
          
          <!-- URL de redirección después del envío (opcional) -->
          <input type="hidden" name="redirect" value="" />
          
          <!-- Nombre del asunto del correo (opcional) -->
          <input type="hidden" name="subject" value="Nuevo mensaje desde el sitio web" />
          
          <!-- Campo de nombre -->
          <div>
            <label for="nombre" class="block text-sm font-medium mb-2 text-gray-300">Nombre</label>
            <input
              type="text"
              id="nombre"
              name="nombre"
              class="w-full px-4 py-3 bg-zinc-700/50 border border-zinc-600/50 rounded-lg focus:outline-none focus:ring-2 focus:ring-white/30 transition-all duration-300"
              required
            />
          </div>
          
          <!-- Campo de email -->
          <div>
            <label for="email" class="block text-sm font-medium mb-2 text-gray-300">Email</label>
            <input
              type="email"
              id="email"
              name="email"
              class="w-full px-4 py-3 bg-zinc-700/50 border border-zinc-600/50 rounded-lg focus:outline-none focus:ring-2 focus:ring-white/30 transition-all duration-300"
              required
            />
          </div>
          
          <!-- Campo de mensaje -->
          <div>
            <label for="mensaje" class="block text-sm font-medium mb-2 text-gray-300">Mensaje</label>
            <textarea
              id="mensaje"
              name="mensaje"
              rows="5"
              class="w-full px-4 py-3 bg-zinc-700/50 border border-zinc-600/50 rounded-lg focus:outline-none focus:ring-2 focus:ring-white/30 transition-all duration-300 resize-none"
              required
            ></textarea>
          </div>
          
          <!-- Botón de envío -->
          <button
            type="submit"
            class="w-full bg-white text-black font-medium py-3 px-6 rounded-full hover:bg-gray-200 transition-colors duration-300 relative overflow-hidden group"
          >
            <span class="relative z-10">Enviar mensaje</span>
            <span class="absolute inset-0 bg-gradient-to-r from-white to-gray-200 transform scale-x-0 group-hover:scale-x-100 origin-left transition-transform duration-300 ease-out"></span>
          </button>
          
          <!-- Mensaje de estado -->
          <div id="result" class="mt-3 text-center hidden"></div>
        </form>
      </div>

      <div class="bg-zinc-800/50 p-8 rounded-2xl backdrop-blur-sm border border-zinc-700/30">
        <h3 class="text-2xl font-semibold mb-6">Información de contacto</h3>
        <div class="space-y-6">
          <div class="flex items-start gap-4">
            <div class="bg-white/10 p-3 rounded-lg">
              <MapPin class="w-5 h-5" />
            </div>
            <div>
              <h4 class="font-medium">Ubicación</h4>
              <p class="text-gray-400">Buenos Aires, Argentina</p>
            </div>
          </div>

          <div class="flex items-start gap-4">
            <div class="bg-white/10 p-3 rounded-lg">
              <Mail class="w-5 h-5" />
            </div>
            <div>
              <h4 class="font-medium">Email</h4>
              <p class="text-gray-400">contacto@ardian.com</p>
            </div>
          </div>

          <div class="flex items-start gap-4">
            <div class="bg-white/10 p-3 rounded-lg">
              <Phone class="w-5 h-5" />
            </div>
            <div>
              <h4 class="font-medium">Teléfono</h4>
              <p class="text-gray-400">+54 11 1234 5678</p>
            </div>
          </div>

          <div class="pt-6">
            <h4 class="font-medium mb-4">Seguinos en redes</h4>
            <div class="flex gap-4">
              <a href="#" class="bg-white/10 p-3 rounded-full hover:bg-white/20 transition-colors duration-300 transform hover:scale-110">
                <Instagram class="w-5 h-5" />
              </a>
              <a href="#" class="bg-white/10 p-3 rounded-full hover:bg-white/20 transition-colors duration-300 transform hover:scale-110">
                <Twitter class="w-5 h-5" />
              </a>
              <a href="#" class="bg-white/10 p-3 rounded-full hover:bg-white/20 transition-colors duration-300 transform hover:scale-110">
                <Linkedin class="w-5 h-5" />
              </a>
              <a href="#" class="bg-white/10 p-3 rounded-full hover:bg-white/20 transition-colors duration-300 transform hover:scale-110">
                <Github class="w-5 h-5" />
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Cargar SweetAlert2 de manera más robusta -->
<script is:inline>
  // Función para cargar SweetAlert2 desde CDN
  function loadSweetAlert2() {
    return new Promise((resolve, reject) => {
      // Verificar si SweetAlert2 ya está cargado
      if (window.Swal) {
        resolve(window.Swal);
        return;
      }
      
      // Crear elemento script
      const script = document.createElement('script');
      script.src = 'https://cdn.jsdelivr.net/npm/sweetalert2@11';
      script.async = true;
      script.onload = () => resolve(window.Swal);
      script.onerror = () => reject(new Error('No se pudo cargar SweetAlert2'));
      
      // Añadir script al documento
      document.head.appendChild(script);
    });
  }
  
  // Cargar SweetAlert2 inmediatamente
  loadSweetAlert2().catch(error => {
    console.error('Error al cargar SweetAlert2:', error);
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contact-form') as HTMLFormElement;
    const result = document.getElementById('result') as HTMLDivElement;
    
    if (!form) return;
    
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      // Intentar cargar SweetAlert2 si aún no está disponible
      let Swal;
      try {
        // Usar la función global definida en el script anterior
        Swal = await (window as any).loadSweetAlert2();
      } catch (error) {
        console.error('No se pudo cargar SweetAlert2:', error);
        // Fallback a alertas normales si SweetAlert2 no está disponible
        alert('Enviando mensaje...');
      }
      
      const formData = new FormData(form);
      const object = Object.fromEntries(formData);
      const json = JSON.stringify(object);
      
      // Mostrar loading (con SweetAlert2 si está disponible, o con el elemento result si no)
      if (Swal) {
        Swal.fire({
          title: 'Enviando mensaje...',
          text: 'Por favor espera un momento',
          icon: 'info',
          allowOutsideClick: false,
          allowEscapeKey: false,
          showConfirmButton: false,
          didOpen: () => {
            Swal.showLoading();
          }
        });
      } else {
        result.innerHTML = "Enviando mensaje...";
        result.classList.remove('hidden', 'text-green-500', 'text-red-500');
        result.classList.add('text-gray-400');
      }
      
      try {
        const response = await fetch('https://api.web3forms.com/submit', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          },
          body: json
        });
        
        const responseData = await response.json();
        
        if (response.status === 200) {
          // Éxito
          if (Swal) {
            Swal.fire({
              title: '¡Mensaje enviado!',
              text: 'Gracias por contactarnos. Te responderemos a la brevedad.',
              icon: 'success',
              confirmButtonText: 'Genial',
              confirmButtonColor: '#3085d6'
            });
          } else {
            result.innerHTML = "¡Mensaje enviado! Gracias por contactarnos.";
            result.classList.remove('hidden', 'text-gray-400', 'text-red-500');
            result.classList.add('text-green-500');
            setTimeout(() => {
              result.classList.add('hidden');
            }, 5000);
          }
          form.reset();
        } else {
          // Error
          if (Swal) {
            Swal.fire({
              title: 'Error',
              text: responseData.message || 'Ocurrió un error al enviar el mensaje. Por favor intenta nuevamente.',
              icon: 'error',
              confirmButtonText: 'Entendido',
              confirmButtonColor: '#d33'
            });
          } else {
            result.innerHTML = responseData.message || "Error al enviar el mensaje. Por favor intenta nuevamente.";
            result.classList.remove('hidden', 'text-gray-400', 'text-green-500');
            result.classList.add('text-red-500');
            setTimeout(() => {
              result.classList.add('hidden');
            }, 5000);
          }
        }
      } catch (error) {
        console.error('Error:', error);
        // Error de conexión
        if (Swal) {
          Swal.fire({
            title: 'Error de conexión',
            text: 'No pudimos conectar con el servidor. Por favor verifica tu conexión a internet e intenta nuevamente.',
            icon: 'error',
            confirmButtonText: 'Entendido',
            confirmButtonColor: '#d33'
          });
        } else {
          result.innerHTML = "Error de conexión. Por favor verifica tu internet e intenta nuevamente.";
          result.classList.remove('hidden', 'text-gray-400', 'text-green-500');
          result.classList.add('text-red-500');
          setTimeout(() => {
            result.classList.add('hidden');
          }, 5000);
        }
      }
    });
  });
</script>

<style>
  /* Estilos adicionales para el formulario */
  input, textarea {
    transition: all 0.3s ease;
  }
  
  input:focus, textarea:focus {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
  }
  
  /* Animación para el botón */
  button[type="submit"] {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  button[type="submit"]:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px -5px rgba(255, 255, 255, 0.1);
  }
  
  /* Animación para los iconos de redes sociales */
  .bg-white\/10 {
    transition: all 0.3s ease;
  }
  
  /* Estilos para mensajes de resultado */
  #result {
    padding: 0.75rem;
    border-radius: 0.5rem;
    transition: all 0.3s ease;
  }
  
  #result.text-green-500 {
    background-color: rgba(16, 185, 129, 0.1);
  }
  
  #result.text-red-500 {
    background-color: rgba(239, 68, 68, 0.1);
  }
</style>